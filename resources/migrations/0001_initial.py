# Generated by Django 5.0.2 on 2024-03-25 16:16

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_secret', models.CharField(db_index=True, verbose_name='API ключ')),
                ('is_active', models.BooleanField(default=False, verbose_name='активно?')),
                ('is_first_parsing', models.BooleanField(default=True, verbose_name='первый парсинг?')),
                ('is_parse_yandex', models.BooleanField(default=False, verbose_name='парсить Яндекс?')),
                ('is_parse_gis', models.BooleanField(default=False, verbose_name='парсить 2Гис?')),
                ('is_parse_google', models.BooleanField(default=False, verbose_name='парсить Google?')),
                ('parser_link_yandex', models.CharField(blank=True, null=True, verbose_name='ссылка Яндекс')),
                ('parser_link_gis', models.CharField(blank=True, null=True, verbose_name='ссылка 2Гис')),
                ('parser_link_google', models.CharField(blank=True, null=True, verbose_name='ссылка Google')),
                ('address', models.CharField(verbose_name='адрес')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='company_logo/%Y/%m/%d/', verbose_name='логотип')),
                ('name', models.CharField(verbose_name='название')),
                ('phone', models.CharField(blank=True, null=True, verbose_name='телефон')),
                ('form_link_yandex', models.CharField(blank=True, null=True, verbose_name='ссылка Яндекс')),
                ('form_link_gis', models.CharField(blank=True, null=True, verbose_name='ссылка 2Гис')),
                ('form_link_google', models.CharField(blank=True, null=True, verbose_name='ссылка Google')),
                ('form_link_dikidi', models.CharField(blank=True, null=True, verbose_name='ссылка Dikidi')),
                ('form_link_restoclub', models.CharField(blank=True, null=True, verbose_name='ссылка Рестоклуб')),
                ('form_link_tripadvisor', models.CharField(blank=True, null=True, verbose_name='ссылка Tripadvisor')),
                ('form_link_prodoctorov', models.CharField(blank=True, null=True, verbose_name='ссылка Продокторов')),
                ('form_link_flamp', models.CharField(blank=True, null=True, verbose_name='ссылка Flamp')),
                ('form_link_zoon', models.CharField(blank=True, null=True, verbose_name='ссылка Zoon')),
                ('form_link_otzovik', models.CharField(blank=True, null=True, verbose_name='ссылка Отзовик')),
                ('form_link_irecommend', models.CharField(blank=True, null=True, verbose_name='ссылка Irecommend')),
                ('form_contact_whatsapp', models.CharField(blank=True, null=True, verbose_name='ссылка Whatsapp')),
                ('form_contact_telegram', models.CharField(blank=True, null=True, verbose_name='ссылка Telegram')),
                ('form_contact_viber', models.CharField(blank=True, null=True, verbose_name='ссылка Viber')),
                ('form_contact_website', models.CharField(blank=True, null=True, verbose_name='ссылка Вебсайт')),
                ('form_contact_vk', models.CharField(blank=True, null=True, verbose_name='ссылка VK')),
                ('form_contact_ok', models.CharField(blank=True, null=True, verbose_name='ссылка Одноклассники')),
                ('form_contact_facebook', models.CharField(blank=True, null=True, verbose_name='ссылка Facebook')),
                ('form_contact_instagram', models.CharField(blank=True, null=True, verbose_name='ссылка Instagram')),
                ('form_contact_youtube', models.CharField(blank=True, null=True, verbose_name='ссылка Youtube')),
                ('form_contact_x', models.CharField(blank=True, null=True, verbose_name='ссылка X')),
                ('rating', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=10, null=True, verbose_name='Общий рейтинг')),
                ('reviews_positive_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов')),
                ('reviews_negative_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов')),
                ('reviews_total_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов')),
                ('messages_total_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество сообщений')),
                ('rating_yandex', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=10, null=True, verbose_name='рейтинг Яндекс')),
                ('rating_yandex_last_parse_at', models.DateTimeField(blank=True, null=True, verbose_name='дата последней загрузки рейтинга Яндекс')),
                ('reviews_yandex_positive_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Яндекс')),
                ('reviews_yandex_positive_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Яндекс за неделю')),
                ('reviews_yandex_positive_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Яндекс за месяц')),
                ('reviews_yandex_positive_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Яндекс за квартал')),
                ('reviews_yandex_positive_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Яндекс за год')),
                ('reviews_yandex_negative_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Яндекс')),
                ('reviews_yandex_negative_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Яндекс за неделю')),
                ('reviews_yandex_negative_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Яндекс за месяц')),
                ('reviews_yandex_negative_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Яндекс за квартал')),
                ('reviews_yandex_negative_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Яндекс за год')),
                ('reviews_yandex_total_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Яндекс')),
                ('reviews_yandex_total_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Яндекс за неделю')),
                ('reviews_yandex_total_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Яндекс за месяц')),
                ('reviews_yandex_total_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Яндекс за квартал')),
                ('reviews_yandex_total_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Яндекс за год')),
                ('reviews_yandex_last_parse_at', models.DateTimeField(blank=True, null=True, verbose_name='дата последней загрузки отзывов Яндекс')),
                ('rating_gis', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=10, null=True, verbose_name='рейтинг 2Гис')),
                ('rating_gis_last_parse_at', models.DateTimeField(blank=True, null=True, verbose_name='дата последней загрузки рейтинга 2Гис')),
                ('reviews_gis_positive_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов 2Гис')),
                ('reviews_gis_positive_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов 2Гис за неделю')),
                ('reviews_gis_positive_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов 2Гис за месяц')),
                ('reviews_gis_positive_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов 2Гис за квартал')),
                ('reviews_gis_positive_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов 2Гис за год')),
                ('reviews_gis_negative_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов 2Гис')),
                ('reviews_gis_negative_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов 2Гис за неделю')),
                ('reviews_gis_negative_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов 2Гис за месяц')),
                ('reviews_gis_negative_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов 2Гис за квартал')),
                ('reviews_gis_negative_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов 2Гис за год')),
                ('reviews_gis_total_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов 2Гис')),
                ('reviews_gis_total_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов 2Гис за неделю')),
                ('reviews_gis_total_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов 2Гис за месяц')),
                ('reviews_gis_total_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов 2Гис за квартал')),
                ('reviews_gis_total_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов 2Гис за год')),
                ('reviews_gis_last_parse_at', models.DateTimeField(blank=True, null=True, verbose_name='дата последней загрузки отзывов 2Гис')),
                ('rating_google', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=10, null=True, verbose_name='рейтинг Google')),
                ('rating_google_last_parse_at', models.DateTimeField(blank=True, null=True, verbose_name='дата последней загрузки рейтинга Google')),
                ('reviews_google_positive_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Google')),
                ('reviews_google_positive_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Google за неделю')),
                ('reviews_google_positive_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Google за месяц')),
                ('reviews_google_positive_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Google за квартал')),
                ('reviews_google_positive_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество позитивных отзывов Google за год')),
                ('reviews_google_negative_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Google')),
                ('reviews_google_negative_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Google за неделю')),
                ('reviews_google_negative_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Google за месяц')),
                ('reviews_google_negative_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Google за квартал')),
                ('reviews_google_negative_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество негативных отзывов Google за год')),
                ('reviews_google_total_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Google')),
                ('reviews_google_total_week_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Google за неделю')),
                ('reviews_google_total_month_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Google за месяц')),
                ('reviews_google_total_quarter_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Google за квартал')),
                ('reviews_google_total_year_count', models.IntegerField(blank=True, default=0, null=True, verbose_name='количество отзывов Google за год')),
                ('reviews_google_last_parse_at', models.DateTimeField(blank=True, null=True, verbose_name='дата последней загрузки отзывов Google')),
            ],
            options={
                'verbose_name': 'компания',
                'verbose_name_plural': 'компании',
                'db_table': 'resources_company',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_notify_negative_portrate', models.BooleanField(default=True, verbose_name='оповещения Портрет')),
                ('can_notify_negative_yandex', models.BooleanField(default=True, verbose_name='оповещения Яндекс')),
                ('can_notify_negative_gis', models.BooleanField(default=True, verbose_name='оповещения 2Гис')),
                ('can_notify_negative_google', models.BooleanField(default=True, verbose_name='оповещения Google')),
                ('can_notify_at_start', models.TimeField(blank=True, default=datetime.time(9, 0), null=True, verbose_name='можно оповещать с')),
                ('can_notify_at_end', models.TimeField(blank=True, default=datetime.time(17, 0), null=True, verbose_name='можно оповещать до')),
                ('can_notify_at_from_stars', models.IntegerField(blank=True, default=3, null=True, verbose_name='количество звезд для оповещений')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'участник',
                'verbose_name_plural': 'участники',
                'db_table': 'resources_membership',
            },
        ),
        migrations.AddField(
            model_name='company',
            name='users',
            field=models.ManyToManyField(blank=True, through='resources.Membership', to=settings.AUTH_USER_MODEL, verbose_name='пользователи'),
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('phone', models.CharField(verbose_name='контактный телефон')),
                ('text', models.TextField(blank=True, null=True, verbose_name='текст сообщения')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.company', verbose_name='компания')),
            ],
            options={
                'verbose_name': 'сообщение',
                'verbose_name_plural': 'сообщения',
                'db_table': 'resources_negative_message',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_secret', models.CharField(db_index=True, verbose_name='API ключ')),
                ('can_notify_at_start', models.TimeField(blank=True, default=datetime.time(9, 0), null=True, verbose_name='можно оповещать с')),
                ('can_notify_at_end', models.TimeField(blank=True, default=datetime.time(17, 0), null=True, verbose_name='можно оповещать до')),
                ('can_notify_negative_portrate', models.BooleanField(default=True, verbose_name='получать оповещения в Telegram о сообщениях в Портрет')),
                ('can_notify_negative_yandex', models.BooleanField(default=True, verbose_name='получать оповещения в Telegram о негативных отзывах в Яндекс Карты')),
                ('can_notify_negative_gis', models.BooleanField(default=True, verbose_name='получать оповещения в Telegram о негативных отзывах в 2Гис Карты')),
                ('can_notify_negative_google', models.BooleanField(default=True, verbose_name='получать оповещения в Telegram о негативных отзывах в Google Maps')),
                ('default_timezone', models.CharField(choices=[('UTC', 'UTC'), ('Europe/Moscow', 'Москва'), ('Asia/Yekaterinburg', 'Екатеринбург')], default='UTC', verbose_name='Временная зона по умолчанию')),
                ('telegram_id', models.CharField(blank=True, null=True, verbose_name='telegram ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'профиль',
                'verbose_name_plural': 'профили',
                'db_table': 'resources_profile',
            },
        ),
        migrations.CreateModel(
            name='RatingStamp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='дата создания')),
                ('rating_yandex', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=10, null=True, verbose_name='рейтинг Яндекс')),
                ('rating_gis', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=10, null=True, verbose_name='рейтинг 2Гис')),
                ('rating_google', models.DecimalField(blank=True, decimal_places=1, default=0.0, max_digits=10, null=True, verbose_name='рейтинг Google')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.company', verbose_name='компания')),
            ],
            options={
                'verbose_name': 'Рейтинг компании',
                'verbose_name_plural': 'Рейтинги компании',
                'db_table': 'resources_company_rating_stamp',
                'unique_together': {('company', 'created_at')},
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateField(verbose_name='дата создания')),
                ('is_visible', models.BooleanField(default=True, verbose_name='отображается в виджете')),
                ('remote_id', models.CharField(blank=True, null=True, verbose_name='ID (агрегация)')),
                ('service', models.CharField(choices=[('YANDEX', 'Яндекс'), ('GIS', '2Гис'), ('GOOGLE', 'Google')], default='YANDEX', verbose_name='сервис')),
                ('stars', models.IntegerField(blank=True, null=True, verbose_name='количество звезд')),
                ('name', models.CharField(blank=True, null=True, verbose_name='пользователь')),
                ('text', models.TextField(blank=True, null=True, verbose_name='текст отзыва')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.company', verbose_name='компания')),
            ],
            options={
                'verbose_name': 'отзыв',
                'verbose_name_plural': 'отзывы',
                'db_table': 'resources_review',
                'unique_together': {('company', 'remote_id')},
            },
        ),
    ]
