# Generated by Django 4.2.5 on 2023-10-21 21:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(verbose_name='название')),
            ],
            options={
                'verbose_name': 'филиал',
                'verbose_name_plural': 'филиалы',
                'db_table': 'resources_branch',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(verbose_name='название')),
                ('user', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='пользователи')),
            ],
            options={
                'verbose_name': 'сеть',
                'verbose_name_plural': 'сети',
                'db_table': 'resources_company',
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_published', models.BooleanField(default=False, verbose_name='опубликовано?')),
                ('path', models.CharField(max_length=255, unique=True, verbose_name='поддомен')),
                ('name', models.CharField(verbose_name='название')),
                ('specialization', models.CharField(verbose_name='Специализация')),
                ('city', models.CharField(verbose_name='город')),
                ('address', models.CharField(verbose_name='адрес')),
                ('is_work_at_monday', models.BooleanField(default=True, verbose_name='работает в понедельник?')),
                ('is_work_at_tuesday', models.BooleanField(default=True, verbose_name='работает в вторник?')),
                ('is_work_at_wednesday', models.BooleanField(default=True, verbose_name='работает в среду?')),
                ('is_work_at_thursday', models.BooleanField(default=True, verbose_name='работает в четверг?')),
                ('is_work_at_friday', models.BooleanField(default=True, verbose_name='работает в пятницу?')),
                ('is_work_at_saturday', models.BooleanField(default=True, verbose_name='работает в субботу?')),
                ('is_work_at_sunday', models.BooleanField(default=True, verbose_name='работает в воскресенье?')),
                ('monday_schedule', models.CharField(verbose_name='часы работы в понедельник')),
                ('tuesday_schedule', models.CharField(verbose_name='часы работы во вторник')),
                ('wednesday_schedule', models.CharField(verbose_name='часы работы в среду')),
                ('thursday_schedule', models.CharField(verbose_name='часы работы в четверг')),
                ('friday_schedule', models.CharField(verbose_name='часы работы в пятницу')),
                ('saturday_schedule', models.CharField(verbose_name='часы работы в субботу')),
                ('sunday_schedule', models.CharField(verbose_name='часы работы в воскресенье')),
                ('description', models.TextField(verbose_name='описание')),
                ('action_button_text', models.CharField(verbose_name='текст кнопки действия')),
                ('action_button_url', models.CharField(verbose_name='url кнопки действия')),
                ('branch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='resources.branch', verbose_name='филиал')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.company', verbose_name='сеть')),
            ],
            options={
                'verbose_name': 'вебсайт',
                'verbose_name_plural': 'вебсайты',
                'db_table': 'resources_website',
            },
        ),
        migrations.CreateModel(
            name='WebsiteUrl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('CUSTOM', 'Custom'), ('WEBSITE', 'Website'), ('VK', 'Vk'), ('OK', 'Ok'), ('X', 'X'), ('FACEBOOK', 'Facebook'), ('INSTAGRAM', 'Instagram'), ('YOUTUBE', 'Youtube'), ('RUTUBE', 'Rutube')], default='CUSTOM', verbose_name='тип')),
                ('name', models.CharField(blank=True, verbose_name='название')),
                ('value', models.CharField(verbose_name='ссылка на ресурс')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.website', verbose_name='вебсайт')),
            ],
            options={
                'verbose_name': 'ссылка вебсайта',
                'verbose_name_plural': 'ссылки вебсайта',
                'db_table': 'resources_website_url',
            },
        ),
        migrations.CreateModel(
            name='WebsiteImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_logo', models.BooleanField(default=False, verbose_name='логотип?')),
                ('sort', models.IntegerField(default=0, verbose_name='порядок')),
                ('file', models.ImageField(upload_to='website_images/%Y/%m/%d/', verbose_name='файл')),
                ('name', models.CharField(verbose_name='название')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.website', verbose_name='вебсайт')),
            ],
            options={
                'verbose_name': 'изображение вебсайта',
                'verbose_name_plural': 'изображения вебсайта',
                'db_table': 'resources_website_image',
            },
        ),
        migrations.CreateModel(
            name='WebsiteContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('CUSTOM', 'Custom'), ('PHONE', 'Phone'), ('WHATSAPP', 'Whatsapp'), ('TELEGRAM', 'Telegram'), ('VIBER', 'Viber'), ('EMAIL', 'Email')], default='CUSTOM', verbose_name='тип')),
                ('name', models.CharField(blank=True, verbose_name='название')),
                ('value', models.CharField(verbose_name='контакт')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.website', verbose_name='вебсайт')),
            ],
            options={
                'verbose_name': 'контакт вебсайта',
                'verbose_name_plural': 'контакты вебсайта',
                'db_table': 'resources_website_contact',
            },
        ),
        migrations.CreateModel(
            name='WebsiteCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('CUSTOM', 'Custom'), ('YANDEX', 'Yandex'), ('GOOGLE', 'Google'), ('GIS', 'Gis'), ('MAPSME', 'Mapsme'), ('DIKIDI', 'Dikidi'), ('RESTOCLUB', 'Restoclub'), ('TRIPADVISOR', 'Tripadvisor'), ('PRODOCTOROV', 'Prodoctorov'), ('FLAMP', 'Flamp'), ('ZOON', 'Zoon'), ('OTZOVIK', 'Otzovik'), ('IRECOMMEND', 'Irecommend')], default='CUSTOM', verbose_name='тип')),
                ('name', models.CharField(blank=True, verbose_name='название')),
                ('value', models.CharField(verbose_name='ссылка на карточку')),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.website', verbose_name='вебсайт')),
            ],
            options={
                'verbose_name': 'карточка вебсайта',
                'verbose_name_plural': 'карточки вебсайта',
                'db_table': 'resources_website_card',
            },
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='resources.company', verbose_name='сеть'),
        ),
    ]
